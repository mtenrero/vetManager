#
# This is a sample configuration. It illustrates how to separate static objects
# traffic from dynamic traffic, and how to dynamically regulate the server load.
#
# It listens on 192.168.1.10:80, and directs all requests for Host 'img' or
# URIs starting with /img or /css to a dedicated group of servers. URIs
# starting with /admin/stats deliver the stats page.
#

global
        maxconn         10000
        stats socket    /var/run/haproxy.stat mode 600 level admin
        log             127.0.0.1 local0
        chroot          /var/empty
        daemon

# FRONTENDS CONFIG ZONE
frontend public_webservice
        bind            :::443        v4v6
        #bind           192.168.1.10:443 ssl crt /etc/haproxy/haproxy.pem
        mode            tcp
        redirect        scheme https if !{ ssl_fc }
        log             global
        option          tcplog
        option          dontlognull
        monitor-uri     /monitoruri
        maxconn         8000
        timeout client  30s

        stats uri       /admin/stats
        default_backend dynamic_webservice

frontend public_iservice
        bind            :::8083        v4v6
        mode            tcp
        redirect        scheme https if !{ ssl_fc }
        log             global
        option          tcplog
        option          dontlognull
        maxconn         8000
        timeout client  30s

        default_backend dynamic_iservice

# BACKENDS CONFIG ZONE
backend dynamic_webservice
        mode            tcp
        balance         roundrobin
        timeout         connect 5s
        timeout         server  30s
        timeout         queue   30s
        fullconn        4000 # the servers will be used at full load above this number of connections
        server          WEBSERVICE1 WEBSERVICE1:8443 check
        server          WEBSERVICE2 WEBSERVICE2:8443 check

backend dynamic_iservice
        mode            tcp
        balance         roundrobin
        timeout         connect 5s
        timeout         server  30s
        timeout         queue   30s
        fullconn        4000 # the servers will be used at full load above this number of connections
        server          ISERVICE1 ISERVICE1:8083 check
        server          ISERVICE2 ISERVICE2:8083 check